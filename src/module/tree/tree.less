@import (reference) '../style/size';
@import (reference) '../style/color';

@iconWidth-md: 11px;

.kf-tree-size(@vpad, @hpad, @fs, @iconWidth) {
  li > {
    > div:first-child {
      > span {
        width: @hpad - 3px;
        left: -@hpad;
        &[kf-tree-hborder-long] {
          width: @hpad + 3px;
        }
      }

      > i {
        font-size: @fs;
      }

      > div {
        padding: @vpad @hpad/2;
        font-size: @fs;
      }
    }

    &:last-child > div:nth-child(2) > span:nth-child(2) {
      left: -@hpad;
    }
    > div:nth-child(2) {
      padding-left: @hpad + @iconWidth/2;

      > span:first-child {
        left: @iconWidth/2;
        border-left: 1px solid @gray;
      }
    }
  }
}

.tree {
  margin: 0;
  padding: 0;
  list-style: none;

  &:not(.subtree) > li > .node > .hborder {
    border: none !important;
  }
  &:not(.subtree) > li > .subtreeWrapper > .overlap {
    border: none !important;
  }

  li > {
    position: relative;
    &[kf-tree-node-dragging] > .node > div {
      box-shadow: 2px 2px 5px @gray;
    }
    &[kf-tree-node-dragover] > .node > div {
      box-shadow: 2px 2px 5px @gray;
    }

    &:last-child > .node > .hborder {
      height: 50%;
      border-left: 1px solid white;
    }
    &:last-child > .subtreeWrapper > .overlap {
      height: 100%;
      top: 0;
      border-left: 1px solid white;
    }

    > .node {
      position: relative;

      > .hborder {
        display: block;
        position: absolute;
        top: 50%;
        border-top: 1px solid @gray;
      }

      > i {
        cursor: pointer;
      }

      > div {
        display: inline-block;
      }
    }

    > .subtreeWrapper {
      position: relative;

      > .vborder {
        display: block;
        position: absolute;
        height: 100%;
        top: 0;
        margin-top: -5px;
      }

      > .overlap {
        display: block;
        position: absolute;
      }
    }
  }
}

.define-kf-tree() {
  @icon-xs: 9.42px;
  @icon-sm: 9.42px;
  @icon-md: 11px;
  @icon-lg: 12.56px;
  @iconWidths: icon-xs, icon-sm, icon-md, icon-lg;

  .kf-tree {
    .kf-tree-size(@vpad-md, @hpad-md, @fs-md, @icon-md);
  }

  @sizeLen: length(@sizes);
  .size(@i: 1) when (@i <= @sizeLen) {
    @s: extract(@sizes, @i);
    @vpad: extract(@vpads, @i);
    @hpad: extract(@hpads, @i);
    @fs: extract(@fss, @i);
    @icon: extract(@iconWidths, @i);

    .kf-tree.kf-@{s} {
      .kf-tree-size(@@vpad, @@hpad, @@fs, @@icon);
    }

    .size(@i + 1);
  }
  .size();
}

:global {
  .define-kf-tree();
}
