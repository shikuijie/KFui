@import (reference) '../style/color/color';
@import (reference) '../style/size/size';

.modal {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  min-height: 100vh;
  z-index: 2017;
  visibility: hidden;
  background-color: transparent;
  overflow-y: auto;
  transition: visibility .5s ease,
              background-color .5s ease;

  > .center {
    position: absolute;
    top: -10%;
    left: 50%;
    transform: translateX(-50%);
    background-color: white;
    opacity: 0;
    transition: top .5s ease, opacity .5s ease;

    > header {
      border-bottom: 1px solid @gray;
    }
    > footer {
      border-top: 1px solid @gray;
    }
  }

  &.open {
    visibility: visible;
    background-color: rgba(0,0,0,.3);
    > .center {
      top: 10%;
      opacity: 1;
    }
  }
}

.define-kf-modal() {
  .kf-modal {
    > div {
      border-radius: @br-md;

      > header,
      > main,
      > footer {
        &:not(:empty) {
          padding: @vpad-md @hpad-md;
        }
      }

      > header {
        &:not(:empty) {
          padding: @vpad-md @hpad-md;
          border-top-left-radius: @br-md;
          border-top-right-radius: @br-md;
          font-size: @fs-md + 5px;
          font-weight: bold;
        }
      }
    }
  }

  @colorLen: length(@colors);
  .color(@i: 1) when (@i <= @colorLen) {
    @c: extract(@colors, @i);

    .kf-modal.kf-@{c} > div {
      > header:not(:empty) {
        background-color: @@c;
        color: white;
      }
    }
    .color(@i + 1);
  }

  .color();
}

:global {
  .define-kf-modal();
}
