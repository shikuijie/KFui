@import (reference) '../../style/color/color';
@import (reference) '../../style/size/size';

.kf-autoinput-color(@color){
  border: 1px solid @color;
  >ul {
    >li {
      >span:hover{
        background-color: @color;
        color: #fff;
      }
      >span.active{
        background-color: @color;
        color: #fff;
      }
    }
  }
}

.kf-autoinput-size(@vpad, @hpad, @br, @fs){
  padding: @vpad @hpad;
  border-radius: @br;
  font-size: @fs;
  >ul{
    max-height: (3*@vpad + @fs) * 10;
    padding-bottom: @vpad;
    >li{
      padding: @vpad @hpad 0;
      >span{
        font-size: @fs;
        padding: @vpad @hpad;
        border-radius: @br;
      }
    }
  }
}

.autoinput {
  position: relative;
  .bg{
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    opacity: 0;
  }
  .list.visible{
    visibility: visible;
    opacity: 1;
  }
  .list {
    overflow-y: overlay;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    margin-top: 2px;
    background: #fff;
    z-index: 2016;
    border: 1px solid @light;
    color: @dark;
    opacity: 0;
    visibility: hidden;
    transition: opacity .2s linear, visibility .2s linear;
    li {
      span {
        display: block;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
    }
  }
}

.define-kf-autoinput(){
  .kf-autoinput,
  .kf-input-group > .kf-autoinput{
    .kf-autoinput-color(@dark);
    .kf-autoinput-size(@vpad-md, @hpad-md, @br-md, @fs-md);
    border-color: @gray;
  }



  @colorLen: length(@colors);
  .color(@i: 1) when (@i <= @colorLen) {
    @c: extract(@colors, @i);
    .kf-autoinput.kf-@{c},
    .kf-input-group > .kf-autoinput.kf-@{c}{
      .kf-autoinput-color(@@c);
    }
    .color(@i + 1);
  }

  @sizeLen: length(@sizes);
  .size(@i: 1) when(@i <= @sizeLen) {
    @s: extract(@sizes, @i);
    @vpad: extract(@vpads, @i);
    @hpad: extract(@hpads, @i);
    @br: extract(@brs, @i);
    @fs: extract(@fss, @i);

    .kf-autoinput.kf-@{s},
    .kf-input-group > .kf-autoinput.kf-@{s}{
      .kf-autoinput-size(@@vpad, @@hpad, @@br, @@fs);
    }
    .size(@i + 1);
  }
  .color();
  .size();
}

:global{
  .define-kf-autoinput();
}
